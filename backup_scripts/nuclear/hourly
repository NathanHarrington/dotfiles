#!/bin/bash
#
# Run rclone to synchronize to the various list of manually configured
# drives. This expects the following configuration:
#
# This is for your current critical backups use case: Primarily text
# files with log entries and sensitive information. The occaisional pdf.
# More data intensive operations such as pictures of the kids, work
# products and task management are all done elsewhere. This is the
# core data that you never want to lose, and is  usually about 1MB of
# new data per year. This strategy provides an hourly backup of any and
# all files placed in a directory using rclone. 
#
# StorageService:/(Backup_prefix)auto_backup/time_frame/
#
# Where StorageService is google drive, dropbox, back blaze b2, etc.
# auto_backup is a directory in the root folder, and hourly, daily,
# weekly are manually created folders. Backup_prefix is the two letter
# prefix of the use-case (nh for home, wp for wasatch photonics)
#
# Nuclear for now and do all the backups every 1 hour while the system
# is on. Then you'll have to go back in manually and delete files to
# save space, but it should take about every year or so before that
# becomes an issue. So that's back to crontab entries like:
#
#SCRIPTS=/home/nharrington/projects/dotfiles/backup_scripts
#export BACKUP_PREFIX=wp  (change this to the correct prefix! )
#13 * * * * $SCRIPTS/encrypt_directory.sh >>$SCRIPTS/backup.log 2>&1
#14 * * * * $SCRIPTS/daily >>$SCRIPTS/backup.log 2>&1


# rclone remote names
declare -a dest=("${BACKUP_PREFIX}dropbox" "${BACKUP_PREFIX}gdrive"
"${BACKUP_PREFIX}backblaze" "${BACKUP_PREFIX}onedrive")

RCLONE=/usr/sbin/rclone

HOSTNAME=$(hostname)
TAR_GPG_FILENAME="${HOSTNAME}_encrypted.tar.gpg"

SRC_FILENAME="$HOME/Documents/working_encrypted/$TAR_GPG_FILENAME"

SCRIPT_NAME=`basename "$0"`


for DST_TYPE in "${dest[@]}"
do
    LOCATION="/auto_backup/${SCRIPT_NAME}"

    # Only change the location name to include the timestamp if it's
    # daily or weekly.
    if [ "$SCRIPT_NAME" != "hourly" ]; then
        TIMESTAMP=`date`
        LOCATION="/auto_backup/${SCRIPT_NAME}/${TIMESTAMP}"
    fi

    # Prepend the bucket name for backblaze b2
    if [ "$DST_TYPE" == "${BACKUP_PREFIX}backblaze" ]; then
        echo "Back blaze bucket prepend"
        LOCATION="${BACKUP_PREFIX}autobackupbucket${LOCATION}"
    fi

    # Perform the actual synchronization with rclone
    NEW_FILE=$DST_TYPE:$LOCATION/$TAR_GPG_FILENAME
    echo "$RCLONE sync $SRC_FILENAME $NEW_FILE"
    $RCLONE sync $SRC_FILENAME "$NEW_FILE"

done

